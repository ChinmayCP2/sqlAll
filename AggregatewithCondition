-- -- Create orders table
-- CREATE TABLE orders (
--     order_id SERIAL PRIMARY KEY,
--     customer_id INT,
--     order_date DATE,
--     sales_amount NUMERIC
-- );

-- -- Insert data into orders table
-- INSERT INTO orders (customer_id, order_date, sales_amount)
-- VALUES
--     (1, '2022-01-01', 100),
--     (2, '2022-01-02', 200),
--     (3, '2022-01-03', 300),
--     (1, '2023-01-01', 400),
--     (2, '2023-01-02', 500),
--     (3, '2023-01-03', 600),
--     (1, '2024-01-01', 700),
--     (2, '2024-01-02', 800),
--     (3, '2024-01-03', 900),
--     (4, '2024-01-04', 1000);

-- -- Create employees table
-- CREATE TABLE employees (
--     employee_id SERIAL PRIMARY KEY,
--     name VARCHAR(100),
--     job_title VARCHAR(100),
--     salary NUMERIC
-- );

-- -- Insert data into employees table
-- INSERT INTO employees (name, job_title, salary)
-- VALUES
--     ('Alice', 'Manager', 50000),
--     ('Bob', 'Sales', 40000),
--     ('Charlie', 'Engineer', 60000),
--     ('David', 'Manager', 55000);

-- -- Create temperature_readings table
-- CREATE TABLE temperature_readings (
--     measurement_date DATE PRIMARY KEY,
--     temperature NUMERIC
-- );

-- -- Insert data into temperature_readings table
-- INSERT INTO temperature_readings (measurement_date, temperature)
-- VALUES
--     ('2023-01-01', 25),
--     ('2023-01-02', 28),
--     ('2023-01-03', 30),
--     ('2024-01-01', 20),
--     ('2024-01-02', 22),
--     ('2024-01-03', 24);

-- -- Create customers table
-- CREATE TABLE customers (
--     customer_id SERIAL PRIMARY KEY,
--     name VARCHAR(100),
--     registration_date DATE
-- );

-- -- Insert data into customers table
-- INSERT INTO customers (name, registration_date)
-- VALUES
--     ('John', '2019-01-01'),
--     ('Jane', '2020-01-01'),
--     ('Doe', '2022-01-01'),
--     ('Smith', '2023-01-01');

-- -- Create products table
-- CREATE TABLE products (
--     product_id SERIAL PRIMARY KEY,
--     category_id INT,
--     product_name VARCHAR(100)
-- );

-- -- Insert data into products table
-- INSERT INTO products (category_id, product_name)
-- VALUES
--     (1, 'Product A'),
--     (2, 'Product B'),
--     (1, 'Product C'),
--     (3, 'Product D'),
--     (2, 'Product E');

-- select * from employees;

select sum(case when job_title = 'Manager' then salary else 0 end) 
	as man_sal_total
	from employees;

select AVG(case when job_title = 'Manager' then salary else 0 end) 
	as man_sal_total
	from employees;

select sum(case when date_part('year', registration_date) = 2019 then 1 else 0 end)
	as count
	from customers;

SELECT EXTRACT(MONTH FROM measurement_date) AS month,
       MAX(CASE WHEN EXTRACT(YEAR FROM measurement_date) = 2023 THEN temperature ELSE NULL END) AS max_temperature_2023
FROM temperature_readings
GROUP BY EXTRACT(MONTH FROM measurement_date);

SELECT MIN(CASE WHEN registration_date > '2019-01-01' THEN registration_date ELSE NULL END) AS earliest_registration_after_2019
FROM customers;

SELECT COUNT(DISTINCT CASE WHEN product_count > 100 THEN category_id ELSE NULL END) AS num_categories_over_100_products
FROM (
    SELECT category_id, COUNT(*) AS product_count
    FROM products
    GROUP BY category_id
) AS subquery;





